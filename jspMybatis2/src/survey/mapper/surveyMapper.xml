<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="survey">

	<sql id="search">
		<choose>
		 	<when test=" list_gubun =='ing' ">
		 		and (current_timestamp between start_date and last_date) and status = 1
		 	</when>
		 	<when test=" list_gubun =='end' ">
		 		and ((current_timestamp > last_date) or status = 0)
		 	</when>
	 	</choose>
	 	<choose>
		 	<when test=" search_option != null and search_option != '' and search_data != null and search_data != '' ">
		 		and ${search_option} like '%' || #{search_data} || '%'
		 	</when>
	 	</choose>
	 	<choose>
		 	<when test=" search_date_check !='' and search_date_s != null and search_date_s !='' and search_date_e != null and search_date_e != '' ">
				 <![CDATA[and (start_date >= to_timestamp(#{search_date_s}) and last_date <= to_timestamp(#{search_date_e}))]]>
		 	</when>
		</choose>
	</sql>

	<insert	id="setInsert">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
				select seq_survey.nextval from dual
		</selectKey>
		insert into survey 
		values(#{no},#{dto.question},#{dto.ans1},#{dto.ans2},#{dto.ans3},#{dto.ans4},#{dto.status},#{dto.start_date},#{dto.last_date},current_timestamp)
	</insert>
	
	<select id="getSelectSurvey" resultType="survey.model.dto.SurveyDTO">
		select * from (select A.*, Rownum Rnum from 
		(select t1.*, (select count(*) from survey_answer t2 where t2.no = t1.no) survey_count from survey t1 where no> 0 
		<include refid="search"></include>
		<![CDATA[) A) where Rnum >= #{startRecord} and Rnum<= #{lastRecord}]]>
	</select>
	
	<select id="getTotalRecord" resultType="int">
		select count(*) from survey where no >0
		<include refid="search"></include>

	</select>
	
	<select id="getSelectOne" resultType="survey.model.dto.SurveyDTO">
		select * from survey where no = #{no}
	</select>
	
	<update id="updateSurvey">
		update survey set question = #{dto.question}, ans1 = #{dto.ans1}, ans2 = #{dto.ans2}, ans3 = #{dto.ans3}, ans4 = #{dto.ans4}, status = #{dto.status}
		where no = #{dto.no}
	</update>
	
	<delete id="deleteSurvey">
		delete from survey where no=#{no}
	</delete>
	
	<insert id="setInsertAnswer">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
				select seq_survey_answer.nextval from dual
		</selectKey>
		insert into survey_answer values(#{no},#{dto.no},#{dto.answer},current_timestamp)
	</insert>
	
	<select id="getCountAnwer" resultType="survey.model.dto.SurveyAnswerDTO">
		select DISTINCT
		(select count(*) from survey_answer where no = #{no} and answer = 1)as answer_count1,
		(select count(*) from survey_answer where no = #{no} and answer = 2)as answer_count2,
		(select count(*) from survey_answer where no = #{no} and answer = 3)as answer_count3,
		(select count(*) from survey_answer where no = #{no} and answer = 4)as answer_count4 from survey_answer		
	</select>
	
	<select id="getTotalCount" resultType="int">
		select count(*) as count from survey_answer where no= #{no}
	</select>
</mapper>